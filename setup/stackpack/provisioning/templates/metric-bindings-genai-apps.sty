  - _type: MetricBinding
    name: LLM Request Rate
    queries:
      - expression: sum(rate(gen_ai_requests_total{ service_name="${name}" }[${__rate_interval}]))
        alias: Request Rate
        primary: true
    scope:  type in ("otel service", "genai.app") AND label in ("gen_ai_app") 
    identifier: urn:stackpack:genai-observability:shared:metric-binding:genai-app-request-rate
    unit: reqps
    chartType: line
    priority: high
    enabled: true
    layout:
      metricPerspective:
        tab: LLM
        section: Utilization
      componentSummary:
        weight: 3

  - _type: MetricBinding
    name: Top models by usage
    queries:
      - expression: topk(5, sum by(gen_ai_request_model) (gen_ai_requests_total{ service_name="${name}" }))
        alias: "${gen_ai_request_model}"
        primary: true
    scope:  type in ("otel service", "genai.app") AND label in ("gen_ai_app") 
    identifier: urn:stackpack:genai-observability:shared:metric-binding:genai-app-top-models
    unit: short
    chartType: line
    priority: high
    enabled: true
    layout:
      metricPerspective:
        tab: LLM
        section: Models
      componentSummary:
        weight: 3

  - _type: MetricBinding
    name: Average Token Consumption vs. Average Usage Cost Comparison
    queries:
      - expression: avg(gen_ai_usage_input_tokens_total{ service_name="${name}" })
        alias: Prompt Tokens
      - expression: avg(gen_ai_usage_output_tokens_total{ service_name="${name}" })
        alias: Completion Tokens
      - expression: avg(gen_ai_usage_cost_USD_bucket{ service_name="${name}" })
        alias: Usage Dollar Cost
    scope:  type in ("otel service", "genai.app") AND label in ("gen_ai_app") 
    identifier: urn:stackpack:genai-observability:shared:metric-binding:genai-app-avg-tokens-per-total-requests
    unit: short
    chartType: line
    priority: high
    enabled: true
    layout:
      metricPerspective:
        tab: LLM
        section: Tokens
      componentSummary:
        weight: 3

  - _type: MetricBinding
    name: Average Usage Cost
    queries:
      - expression: avg by() (gen_ai_usage_cost_USD_sum{ service_name="${name}" })
        alias: Usage Dollar Cost
    scope:  type in ("otel service", "genai.app") AND label in ("gen_ai_app") 
    identifier: urn:stackpack:genai-observability:shared:metric-binding:genai-app-avg-usage-cost
    unit: currencyUSD
    chartType: line
    tags:
      experimental_chartType: Gauge
      enableGaugeChart: "1"
    priority: high
    enabled: true
    layout:
      metricPerspective:
        tab: LLM
        section: Cost
      componentSummary:
        weight: 3

  - _type: MetricBinding
    name: Total Usage Cost
    queries:
      - expression: sum(gen_ai_usage_cost_USD_sum{ service_name="${name}" })
        alias: Usage Dollar Cost
    scope:  type in ("otel service", "genai.app") AND label in ("gen_ai_app") 
    identifier: urn:stackpack:genai-observability:shared:metric-binding:genai-app-avg-total-usage-cost
    unit: currencyUSD
    chartType: line
    tags:
      experimental_chartType: Gauge
      enableGaugeChart: "1"
    priority: high
    enabled: true
    layout:
      metricPerspective:
        tab: LLM
        section: Cost
      componentSummary:
        weight: 3

  - _type: MetricBinding
    name: Total Usage Tokens
    queries:
      - expression: sum(gen_ai_usage_tokens_total{ service_name="${name}" })
        alias: Total Usage Tokens
    scope:  type in ("otel service", "genai.app") AND label in ("gen_ai_app") 
    identifier: urn:stackpack:genai-observability:shared:metric-binding:genai-app-total-usage-tokens
    unit: short
    chartType: line
    tags:
      experimental_chartType: Gauge
      enableGaugeChart: "1"
    priority: high
    enabled: true
    layout:
      metricPerspective:
        tab: LLM
        section: Tokens
      componentSummary:
        weight: 3

  - _type: MetricBinding
    name: Total Usage Tokens
    queries:
      - expression: sum(gen_ai_usage_tokens_total{ service_name="${name}" })
        alias: Total Usage Tokens
    scope:  type in ("otel service", "genai.app") AND label in ("gen_ai_app") 
    identifier: urn:stackpack:genai-observability:shared:metric-binding:genai-app-total-usage-tokens-line
    unit: short
    chartType: line
    priority: high
    enabled: true
    layout:
      metricPerspective:
        tab: LLM
        section: Tokens
      componentSummary:
        weight: 3

  - _type: MetricBinding
    name: Total Successful GenAI Requests
    queries:
      - expression: sum by() (gen_ai_requests_total{ service_name="${name}" })
        alias: Requests
        primary: true
    scope:  type in ("otel service", "genai.app") AND label in ("gen_ai_app") 
    identifier: urn:stackpack:genai-observability:shared:metric-binding:genai-app-request-total-success
    unit: short
    chartType: line
    tags:
      experimental_chartType: Gauge
      enableGaugeChart: "1"
    priority: high
    enabled: true
    layout:
      metricPerspective:
        tab: LLM
        section: Utilization
      componentSummary:
        weight: 3


  - _type: MetricBinding
    name: Average Usage Cost per model
    queries:
      - expression: avg by(gen_ai_request_model) (gen_ai_usage_cost_USD_sum{ service_name="${name}" })/100
        alias: '${gen_ai_request_model}'
    scope: type in ("otel service", "genai.app") AND label in ("gen_ai_app")
    identifier: urn:stackpack:genai-observability:shared:metric-binding:genai-app-avg-usage-cost-per-model
    unit: currencyUSD
    chartType: line
    priority: high
    enabled: true
    layout:
      metricPerspective:
        tab: LLM
        section: Cost
      componentSummary:
        weight: 3


  - _type: MetricBinding
    name: DB Request Rate
    queries:
      - expression: sum(rate(db_requests_total{ service_name="${name}" }[${__rate_interval}]))
        alias: Request Rate
        primary: true
    scope:  type in ("otel service", "genai.app") AND label in ("gen_ai_app") 
    identifier: urn:stackpack:genai-observability:shared:metric-binding:genai-app-vectordb-request-rate
    unit: reqps
    chartType: line
    priority: high
    enabled: true
    layout:
      metricPerspective:
        tab: VectorDB
        section: Request 
      componentSummary:
        weight: 3


  - _type: MetricBinding
    name: Average Tokens per Request 
    description: Input and output tokens per inference call. Indicates verbosity or prompt inflation. Higher values drive cost and latency.
    queries:
      - expression: sum(rate(gen_ai_usage_tokens_total{service_name="${name}"}[5m])) / sum(rate(gen_ai_requests_total{service_name="${name}"}[5m]))
        alias: "AVG Tokens/Request"
        primary: true
    scope:  type in ("otel service", "genai.app") AND label in ("gen_ai_app") 
    identifier: urn:stackpack:genai-observability:shared:metric-binding:genai-app-average-tokens-per-request
    unit: short
    chartType: line
    priority: high
    enabled: true
    layout:
      metricPerspective:
        tab: LLM 
        section: Tokens
      componentSummary:
        weight: 3


  - _type: MetricBinding
    name: Token Throughput 
    description: Aggregate input + output tokens processed per second. Similar to a GPU-workload proxy.
    queries:
      - expression: sum by(gen_ai_request_model) (rate(gen_ai_usage_tokens_total{service_name="${name}"}[${__interval}]))/sum(rate(gen_ai_requests_total{service_name="${name}"}[${__interval}]))
        alias: "${gen_ai_request_model}"
        primary: true
    scope:  type in ("otel service", "genai.app") AND label in ("gen_ai_app") 
    identifier: urn:stackpack:genai-observability:shared:metric-binding:genai-app-tokens-throughput
    unit: cps 
    chartType: line
    priority: high
    enabled: true
    layout:
      metricPerspective:
        tab: LLM 
        section: Tokens
      componentSummary:
        weight: 3


  - _type: MetricBinding
    name: Cost per 1 K Tokens (USD)
    description: Expenditure to 1000-token chunks, enabling cross-model cost benchmarking. 
    queries:
      - expression: (sum by (gen_ai_request_model) (rate(gen_ai_usage_cost_USD_sum{service_name="${name}"}[${__rate_interval}])) / sum by(gen_ai_request_model) (rate(gen_ai_usage_tokens_total{service_name="${name}"}[${__rate_interval}]))) * 1000
        alias: "${gen_ai_request_model}"
        primary: true
    scope:  type in ("otel service", "genai.app") AND label in ("gen_ai_app") 
    identifier: urn:stackpack:genai-observability:shared:metric-binding:genai-app-cost-per-1k-tokens
    unit: currencyUSD 
    chartType: line
    priority: high
    enabled: true
    layout:
      metricPerspective:
        tab: LLM 
        section: Cost
      componentSummary:
        weight: 3


  - _type: MetricBinding
    name: Top Vector Databases by Usage
    queries:
      - expression: sum by(db_system) (db_requests_total{service_name="${name}"})
        alias: "${db_system}"
        primary: true
    scope:  type in ("otel service", "genai.app") AND label in ("gen_ai_app") 
    identifier: urn:stackpack:genai-observability:shared:metric-binding:genai-app-vectordb-top-vectordb-by-usage
    unit: short 
    chartType: line
    priority: high
    enabled: true
    layout:
      metricPerspective:
        tab: VectorDB
        section: Usage
      componentSummary:
        weight: 3


  - _type: MetricBinding
    name: Total Database Operations 
    queries:
      - expression: sum(db_requests_total{service_name="${name}"})
        alias: Total Operations
        primary: true
    scope:  type in ("otel service", "genai.app") AND label in ("gen_ai_app") 
    identifier: urn:stackpack:genai-observability:shared:metric-binding:genai-app-vectordb-total-database-operations
    unit: short 
    chartType: line
    tags:
      experimental_chartType: Gauge
      enableGaugeChart: "1"
    priority: high
    enabled: true
    layout:
      metricPerspective:
        tab: VectorDB
        section: Usage
      componentSummary:
        weight: 3

